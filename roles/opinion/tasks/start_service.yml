---
# reload and start service 

# - name: running command add log4j2
#   ansible.builtin.command: /usr/bin/java -jar /data/opinion/jetty/start.jar --add-to-start=logging-log4j2
      
- name: Reload jetty systemd
  systemd:
    name: jetty
    state: reloaded
  tags: configuration
        
- name: Start and enable the jetty service
  systemd:
    name: jetty
    state: started
    enabled: yes
  tags: configuration

- name: Reload opinion_api systemd
  systemd:
    name: opinion-api
    state: reloaded
  tags: configuration
        
- name: Start and enable the opinion_api service
  systemd:
    name: opinion-api
    state: started
    enabled: yes
  tags: configuration

- name: Reload opinion_automation systemd
  systemd:
    name: opinion-automation
    state: reloaded
  tags: configuration
        
- name: Start and enable the opinion_automation service
  systemd:
    name: opinion-automation
    state: started
    enabled: yes
  tags: configuration

- name: Sleep for 2 seconds and continue with play
  ansible.builtin.wait_for:
    timeout: 2

- name: Get Service Status
  ansible.builtin.systemd:
    name: opinion-api
  register: opinion_api

- name: Get Service Status
  ansible.builtin.systemd:
    name: opinion-automation
  register: opinion_automation

- debug:
    msg: 
    - "opinion-api: {{ opinion_api.status.ActiveState }}"
    - "opinion-automation: {{ opinion_automation.status.ActiveState }}"

# - ansible.builtin.assert:
#     that:
#       - opinion_api.status.ActiveState == "active"
#       - opinion_automation.status.ActiveState == "active"
#     fail_msg: "'opinion-api' or 'opinion_automation' service is inactive"
#     success_msg: "'opinion-api' and 'opinion_automation' service is active"