---
- name: AWS
  ansible.builtin.import_role:
    name: inqwise.common.aws
  vars:
    dns_record_list:
      - name: "{{ private_dns }}.{{ private_domain }}"
        zone: "{{ private_domain }}"
        type: A
        value: "{{ private_ip }}"
        private: true
        ttl: 120

- name: Include opinion role
  ansible.builtin.include_role:
    name: opinion
  vars:
    user: "{{ app_user }}"
    group: "{{ app_group }}"
    collaboration_base: "{{ opinion_base_path }}"
    discord_webhook_error_log: "{{ discord_webhooks.apilog | default(discord_webhooks.default) }}"
  tags: always

- name: Install Alloy
  include_role:
    name: alloy
  vars:
    alloy_user_groups:
      - systemd-journal
    env_file_vars:
      CUSTOM_ARGS: "--server.http.listen-addr=0.0.0.0:12345 --disable-reporting=true --stability.level=public-preview"
    config: |
      loki.write "local" {
        endpoint {
          url = "{{ loki_base_url }}/loki/api/v1/push"
        }
      }

      loki.relabel "journal" {
        forward_to = []

        rule {
          source_labels = ["__journal__systemd_unit"]
          regex         = "(jetty.service|opinion-api.service|opinion-automation.service|telegraf.service)"
          action        = "keep"
        }
        rule {
          source_labels = ["__journal__systemd_unit"]
          target_label  = "unit"
        }
        rule {
          source_labels = ["__journal__hostname"]
          target_label  = "instance"
        }
      }

      loki.source.journal "read" {
        forward_to = [
          loki.write.local.receiver,
        ]
        relabel_rules = loki.relabel.journal.rules
        labels = {
          "job" = "integrations/node_exporter",
          "app" = "opinion",
        }
      }
  tags: always